{
  "openapi": "3.1.0",
  "info": {
    "title": "BoostPay API",
    "description": "A FastAPI REST API for user and document management with JWT authentication",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["authentication"],
        "summary": "Register",
        "description": "Register a new user",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["authentication"],
        "summary": "Login",
        "description": "Authenticate user and return access token",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLogin" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Get Current User Info",
        "description": "Get current user information",
        "operationId": "get_current_user_info_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      },
      "put": {
        "tags": ["users"],
        "summary": "Update Current User",
        "description": "Update current user information",
        "operationId": "update_current_user_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/users/": {
      "get": {
        "tags": ["users"],
        "summary": "List Users",
        "description": "List all users (superuser only)",
        "operationId": "list_users_users__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserResponse" },
                  "title": "Response List Users Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get User",
        "description": "Get user by ID",
        "operationId": "get_user_users__user_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update User",
        "description": "Update user by ID (superuser only)",
        "operationId": "update_user_users__user_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete User",
        "description": "Deactivate user by ID (superuser only) - soft delete by setting is_active=False",
        "operationId": "delete_user_users__user_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/documents/": {
      "post": {
        "tags": ["documents"],
        "summary": "Create Document",
        "description": "Create a new document",
        "operationId": "create_document_documents__post",
        "security": [{ "HTTPBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["documents"],
        "summary": "List Documents",
        "description": "List user's documents",
        "operationId": "list_documents_documents__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentResponse" },
                  "title": "Response List Documents Documents  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/documents/upload": {
      "post": {
        "tags": ["documents"],
        "summary": "Upload Document",
        "description": "Upload a document file",
        "operationId": "upload_document_documents_upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Title" }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Content"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_documents_upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/documents/{document_id}": {
      "get": {
        "tags": ["documents"],
        "summary": "Get Document",
        "description": "Get document by ID",
        "operationId": "get_document_documents__document_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Document Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["documents"],
        "summary": "Update Document",
        "description": "Update document by ID",
        "operationId": "update_document_documents__document_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Document Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["documents"],
        "summary": "Delete Document",
        "description": "Delete document by ID",
        "operationId": "delete_document_documents__document_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Document Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/documents/all/admin": {
      "get": {
        "tags": ["documents"],
        "summary": "List All Documents",
        "description": "List all documents (superuser only)",
        "operationId": "list_all_documents_documents_all_admin_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentWithOwner" },
                  "title": "Response List All Documents Documents All Admin Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/oauth/google/login": {
      "get": {
        "tags": ["oauth"],
        "summary": "Google Login",
        "description": "Initiate Google OAuth login flow",
        "operationId": "google_login_oauth_google_login_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/oauth/google/callback": {
      "get": {
        "tags": ["oauth"],
        "summary": "Google Callback",
        "description": "Handle Google OAuth callback and create/login user",
        "operationId": "google_callback_oauth_google_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          }
        }
      }
    },
    "/products/": {
      "post": {
        "tags": ["products"],
        "summary": "Create Product",
        "operationId": "create_product_products__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["products"],
        "summary": "List Products",
        "operationId": "list_products_products__get",
        "parameters": [
          {
            "name": "establishment_id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProductResponse" },
                  "title": "Response List Products Products  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "put": {
        "tags": ["products"],
        "summary": "Update Product",
        "operationId": "update_product_products__product_id__put",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Product Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["products"],
        "summary": "Get Product",
        "operationId": "get_product_products__product_id__get",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Product Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/customers/": {
      "post": {
        "tags": ["customers"],
        "summary": "Create Customer",
        "operationId": "create_customer_customers__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["customers"],
        "summary": "List Customers",
        "operationId": "list_customers_customers__get",
        "parameters": [
          {
            "name": "establishment_id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CustomerResponse" },
                  "title": "Response List Customers Customers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}": {
      "put": {
        "tags": ["customers"],
        "summary": "Update Customer",
        "operationId": "update_customer_customers__customer_id__put",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Customer Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["customers"],
        "summary": "Get Customer",
        "operationId": "get_customer_customers__customer_id__get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Customer Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/transactions/": {
      "post": {
        "tags": ["transactions"],
        "summary": "Create Transaction",
        "operationId": "create_transaction_transactions__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransactionCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TransactionResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["transactions"],
        "summary": "List Transactions",
        "operationId": "list_transactions_transactions__get",
        "parameters": [
          {
            "name": "establishment_id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponse"
                  },
                  "title": "Response List Transactions Transactions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "put": {
        "tags": ["transactions"],
        "summary": "Update Transaction",
        "operationId": "update_transaction_transactions__transaction_id__put",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Transaction Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransactionUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TransactionResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["transactions"],
        "summary": "Get Transaction",
        "operationId": "get_transaction_transactions__transaction_id__get",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Transaction Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TransactionResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/establishments/": {
      "post": {
        "tags": ["establishments"],
        "summary": "Create Establishment",
        "description": "Create a new establishment with only identification number required",
        "operationId": "create_establishment_establishments__post",
        "security": [{ "HTTPBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EstablishmentCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstablishmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["establishments"],
        "summary": "List Establishments",
        "description": "List establishments accessible to the user",
        "operationId": "list_establishments_establishments__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstablishmentResponse"
                  },
                  "title": "Response List Establishments Establishments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/establishments/{establishment_id}": {
      "get": {
        "tags": ["establishments"],
        "summary": "Get Establishment",
        "description": "Get establishment by ID - superuser gets any establishment, regular users need access",
        "operationId": "get_establishment_establishments__establishment_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "establishment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstablishmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["establishments"],
        "summary": "Update Establishment",
        "description": "Update establishment information - requires access permission",
        "operationId": "update_establishment_establishments__establishment_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "establishment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EstablishmentUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstablishmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/establishments/{establishment_id}/users/{user_id}": {
      "post": {
        "tags": ["establishments"],
        "summary": "Add User To Establishment",
        "description": "Add user to establishment (superuser only)",
        "operationId": "add_user_to_establishment_establishments__establishment_id__users__user_id__post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "establishment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "user", "title": "Role" }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["establishments"],
        "summary": "Remove User From Establishment",
        "description": "Remove user from establishment (superuser only)",
        "operationId": "remove_user_from_establishment_establishments__establishment_id__users__user_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "establishment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/establishments/{establishment_id}/users": {
      "get": {
        "tags": ["establishments"],
        "summary": "Get Establishment Users",
        "description": "Get users associated with establishment",
        "operationId": "get_establishment_users_establishments__establishment_id__users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "establishment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Establishment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "object", "additionalProperties": true },
                  "title": "Response Get Establishment Users Establishments  Establishment Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["health"],
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_upload_document_documents_upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_document_documents_upload_post"
      },
      "CustomerCreate": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "phone": {
            "type": "string",
            "maxLength": 20,
            "minLength": 8,
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "document_number": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Document Number"
          }
        },
        "type": "object",
        "required": ["establishment_id", "name", "phone", "document_number"],
        "title": "CustomerCreate"
      },
      "CustomerResponse": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "phone": {
            "type": "string",
            "maxLength": 20,
            "minLength": 8,
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "document_number": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Document Number"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "establishment_id",
          "name",
          "phone",
          "document_number",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "CustomerResponse"
      },
      "CustomerUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Name"
          },
          "phone": {
            "anyOf": [
              { "type": "string", "maxLength": 20, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "document_number": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Document Number"
          }
        },
        "type": "object",
        "title": "CustomerUpdate"
      },
      "DocumentCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["title"],
        "title": "DocumentCreate"
      },
      "DocumentResponse": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content"
          },
          "id": { "type": "integer", "title": "Id" },
          "file_path": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Path"
          },
          "file_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Type"
          },
          "file_size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "File Size"
          },
          "owner_id": { "type": "integer", "title": "Owner Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["title", "id", "owner_id", "created_at", "updated_at"],
        "title": "DocumentResponse"
      },
      "DocumentUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content"
          }
        },
        "type": "object",
        "title": "DocumentUpdate"
      },
      "DocumentWithOwner": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "content": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Content"
          },
          "id": { "type": "integer", "title": "Id" },
          "file_path": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Path"
          },
          "file_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "File Type"
          },
          "file_size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "File Size"
          },
          "owner_id": { "type": "integer", "title": "Owner Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "owner": { "$ref": "#/components/schemas/UserResponse" }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "owner_id",
          "created_at",
          "updated_at",
          "owner"
        ],
        "title": "DocumentWithOwner"
      },
      "EstablishmentCreate": {
        "properties": {
          "identification_document_number": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Identification Document Number"
          },
          "type": {
            "anyOf": [
              { "$ref": "#/components/schemas/EstablishmentType" },
              { "type": "null" }
            ]
          },
          "legal_representative_document_number": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Legal Representative Document Number"
          },
          "legal_representative_birth_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Legal Representative Birth Date"
          },
          "legal_representative_phone": {
            "anyOf": [
              { "type": "string", "maxLength": 20, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Legal Representative Phone"
          },
          "company_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Company Name"
          },
          "trade_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Trade Name"
          },
          "business_segment": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Business Segment"
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Website"
          },
          "activity_description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Activity Description"
          },
          "postal_code": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 5 },
              { "type": "null" }
            ],
            "title": "Postal Code"
          },
          "state": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 2 },
              { "type": "null" }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "City"
          },
          "street": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Street"
          },
          "number": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Number"
          },
          "complement": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Complement"
          },
          "neighborhood": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Neighborhood"
          },
          "identification_document_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Identification Document File Url"
          },
          "address_proof_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Address Proof File Url"
          },
          "articles_of_incorporation_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Articles Of Incorporation File Url"
          }
        },
        "type": "object",
        "required": ["identification_document_number"],
        "title": "EstablishmentCreate"
      },
      "EstablishmentResponse": {
        "properties": {
          "identification_document_number": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Identification Document Number"
          },
          "type": {
            "anyOf": [
              { "$ref": "#/components/schemas/EstablishmentType" },
              { "type": "null" }
            ]
          },
          "legal_representative_document_number": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Legal Representative Document Number"
          },
          "legal_representative_birth_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Legal Representative Birth Date"
          },
          "legal_representative_phone": {
            "anyOf": [
              { "type": "string", "maxLength": 20, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Legal Representative Phone"
          },
          "company_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Company Name"
          },
          "trade_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Trade Name"
          },
          "business_segment": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Business Segment"
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Website"
          },
          "activity_description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Activity Description"
          },
          "postal_code": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 5 },
              { "type": "null" }
            ],
            "title": "Postal Code"
          },
          "state": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 2 },
              { "type": "null" }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "City"
          },
          "street": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Street"
          },
          "number": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Number"
          },
          "complement": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Complement"
          },
          "neighborhood": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Neighborhood"
          },
          "identification_document_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Identification Document File Url"
          },
          "address_proof_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Address Proof File Url"
          },
          "articles_of_incorporation_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Articles Of Incorporation File Url"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["identification_document_number", "id"],
        "title": "EstablishmentResponse"
      },
      "EstablishmentType": {
        "type": "string",
        "enum": ["PERSONAL", "BUSINESS"],
        "title": "EstablishmentType"
      },
      "EstablishmentUpdate": {
        "properties": {
          "identification_document_number": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Identification Document Number"
          },
          "type": {
            "anyOf": [
              { "$ref": "#/components/schemas/EstablishmentType" },
              { "type": "null" }
            ]
          },
          "legal_representative_document_number": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Legal Representative Document Number"
          },
          "legal_representative_birth_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Legal Representative Birth Date"
          },
          "legal_representative_phone": {
            "anyOf": [
              { "type": "string", "maxLength": 20, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Legal Representative Phone"
          },
          "company_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Company Name"
          },
          "trade_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Trade Name"
          },
          "business_segment": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Business Segment"
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Website"
          },
          "activity_description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Activity Description"
          },
          "postal_code": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 5 },
              { "type": "null" }
            ],
            "title": "Postal Code"
          },
          "state": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 2 },
              { "type": "null" }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "City"
          },
          "street": {
            "anyOf": [
              { "type": "string", "maxLength": 128, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Street"
          },
          "number": {
            "anyOf": [
              { "type": "string", "maxLength": 16, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Number"
          },
          "complement": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Complement"
          },
          "neighborhood": {
            "anyOf": [
              { "type": "string", "maxLength": 128 },
              { "type": "null" }
            ],
            "title": "Neighborhood"
          },
          "identification_document_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Identification Document File Url"
          },
          "address_proof_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Address Proof File Url"
          },
          "articles_of_incorporation_file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Articles Of Incorporation File Url"
          }
        },
        "type": "object",
        "title": "EstablishmentUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ProductCreate": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "code": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              { "type": "number", "exclusiveMinimum": 0.0 },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              }
            ],
            "title": "Price"
          },
          "product_photo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Product Photo Url"
          }
        },
        "type": "object",
        "required": ["establishment_id", "code", "name", "price"],
        "title": "ProductCreate"
      },
      "ProductResponse": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "code": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "price": {
            "type": "string",
            "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$",
            "title": "Price"
          },
          "product_photo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Product Photo Url"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "establishment_id",
          "code",
          "name",
          "price",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ProductResponse"
      },
      "ProductUpdate": {
        "properties": {
          "code": {
            "anyOf": [
              { "type": "string", "maxLength": 32, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Code"
          },
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 512 },
              { "type": "null" }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              { "type": "number", "exclusiveMinimum": 0.0 },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              },
              { "type": "null" }
            ],
            "title": "Price"
          },
          "product_photo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Product Photo Url"
          }
        },
        "type": "object",
        "title": "ProductUpdate"
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "Token"
      },
      "TokenResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "TokenResponse"
      },
      "TransactionCreate": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "external_reference": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "External Reference"
          },
          "transaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": { "type": "string" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Transaction Metadata"
          }
        },
        "type": "object",
        "required": ["establishment_id", "external_reference"],
        "title": "TransactionCreate"
      },
      "TransactionResponse": {
        "properties": {
          "establishment_id": {
            "type": "integer",
            "title": "Establishment Id"
          },
          "external_reference": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "External Reference"
          },
          "transaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": { "type": "string" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Transaction Metadata"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "establishment_id",
          "external_reference",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TransactionResponse"
      },
      "TransactionUpdate": {
        "properties": {
          "external_reference": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "External Reference"
          },
          "transaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": { "type": "string" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Transaction Metadata"
          }
        },
        "type": "object",
        "title": "TransactionUpdate"
      },
      "UserCreate": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["email", "full_name", "password"],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": { "type": "integer", "title": "Id" },
          "is_superuser": { "type": "boolean", "title": "Is Superuser" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "full_name",
          "id",
          "is_superuser",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "format": "email" },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Full Name"
          },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  }
}
